---- ComIndex_Uart2 Matches (31 in 5 files) ----
ComBottom.C (src):        gs_ComGroup[ComIndex_Uart2].ucFrmHeadCnt++;
ComConfig.h (inc):#define ComIndex_Uart2      1               //  红外
McuDrive.c (src):    ComBom_Init(ComIndex_Uart2);    //将uart4 端口对应的 COM初始化
Prcfrm.c (src):            if((sFrm->ucPort==ComIndex_Uart2)
Prcfrm.c (src):            if((sFrm->ucPort==ComIndex_Uart2)                //红外通道判断，没有通过认证
Uart2.c (src):          ComBom_Init(ComIndex_Uart2);    //将uart6 端口对应的 COM初始化
Uart2.c (src):       gs_ComGroup[ComIndex_Uart2].ucPort   = Port_Uart2;
Uart2.c (src):       gs_ComGroup[ComIndex_Uart2].ucRecvTmr = Const_DyRvPack;     //设置数据包接收超时时间
Uart2.c (src):       if(gs_ComGroup[ComIndex_Uart2].ucStt == ComStt_Idle)        //当前是空闲的状态的话，判断是否是帧头68
Uart2.c (src):               gs_ComGroup[ComIndex_Uart2].ucStt = ComStt_Recv;
Uart2.c (src):       if(gs_ComGroup[ComIndex_Uart2].ucStt == ComStt_Recv)            //这个判断是防止发送的时候有接收中断进入的可能
Uart2.c (src):           if(gs_ComGroup[ComIndex_Uart2].ucLen < Const_MaxBufLen)     //判断 com中的buf是否溢出
Uart2.c (src):               gs_ComGroup[ComIndex_Uart2].ucBuf[gs_ComGroup[ComIndex_Uart2].ucLen++] = (uint8)USART_ReceiveData(USART2);//数据存入缓冲区，指针加加
Uart2.c (src):               if(gs_ComGroup[ComIndex_Uart2].ucLen>COMINITLEN)
Uart2.c (src):                   if(gs_ComGroup[ComIndex_Uart2].ucBuf[7]!=COMHEAD)           //如果第7个不是68返回错误
Uart2.c (src):                       gs_ComGroup[ComIndex_Uart2].ucStt=ComStt_Idle;
Uart2.c (src):                   }else if(gs_ComGroup[ComIndex_Uart2].ucLen>=(gs_ComGroup[ComIndex_Uart2].ucBuf[9]+COMINITLEN+2))   //长度符合要求
Uart2.c (src):                           gs_ComGroup[ComIndex_Uart2].ucStt=ComStt_WaitProc;
Uart2.c (src):                           gs_ComGroup[ComIndex_Uart2].ucRecvTmr=0;
Uart2.c (src):    if(gs_ComGroup[ComIndex_Uart2].ucPort   == Port_Uart2)
Uart2.c (src):        if(gs_ComGroup[ComIndex_Uart2].ucStt == ComStt_Send)
Uart2.c (src):            if(gs_ComGroup[ComIndex_Uart2].ucPos >= gs_ComGroup[ComIndex_Uart2].ucLen)
Uart2.c (src):                ComBom_Init(ComIndex_Uart2);//将uart2 端口对应的 COM初始化
Uart2.c (src):                if(gs_ComGroup[ComIndex_Uart2].ucFrmHeadCnt<4)
Uart2.c (src):                    gs_ComGroup[ComIndex_Uart2].ucFrmHeadCnt++;
Uart2.c (src):                    USART_SendData(USART2,gs_ComGroup[ComIndex_Uart2].ucBuf[gs_ComGroup[ComIndex_Uart2].ucPos++]);    //发送数据
Uart2.c (src):            ComBom_Init(ComIndex_Uart2);//将uart3 端口对应的 COM初始化
